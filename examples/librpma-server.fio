# Example of the librpma server job

# The engine requires some options to work correctly:
# - thread XXX some initiation steps are synchronized between threads
# - create_serialize=0 forces specific initiation sequence

[global]
ioengine=librpma_server
bindname=192.168.0.107
port=7204
thread

# The server side spawns a single thread, opens and registers the whole
# provided memory. The server accepts a connection, waits for it to end up,
# and closes itself.

[server]
create_serialize=0
iomem_align=4096	# [page size]
num_conns=1		# [total # of connections]
size=4096		# [size of workspace for a single connection]
# mem=mmap:/tmp/fio	# [XXX device dax or an existing fsdax file]
